import {
  Avalanche,
  Binance,
  Celo,
  Ether,
  Fantom,
  Fuse,
  Glmr,
  Harmony,
  Heco,
  Kava,
  Matic,
  Movr,
  Okex,
  Palm,
  Telos,
  xDai,
  Metis,
  Boba,
  Shibarium,
  Zeta,
  X1,
  Shardeum,
  Merlin,
  XLayer,
  Fhenix
} from '../entities/Native'

import { ChainId } from '../enums'
import { NativeMap } from '../types'

export const NATIVE: NativeMap = {
  [ChainId.ETHEREUM]: Ether.onChain(ChainId.ETHEREUM),
  [ChainId.ROPSTEN]: Ether.onChain(ChainId.ROPSTEN),
  [ChainId.RINKEBY]: Ether.onChain(ChainId.RINKEBY),
  [ChainId.GÖRLI]: Ether.onChain(ChainId.GÖRLI),
  [ChainId.BASE_GOERLI]: Ether.onChain(ChainId.BASE_GOERLI),
  [ChainId.SHIBARIUM_PUPPY]: Shibarium.onChain(ChainId.SHIBARIUM_PUPPY),
  [ChainId.ZETA_TESTNET]: Zeta.onChain(ChainId.ZETA_TESTNET),
  [ChainId.X1_TESTNET]: X1.onChain(ChainId.X1_TESTNET),
  [ChainId.SHIBARIUM]: Shibarium.onChain(ChainId.SHIBARIUM),
  [ChainId.MANTA_TESTNET]: Ether.onChain(ChainId.MANTA_TESTNET),
  [ChainId.MANTA]: Ether.onChain(ChainId.MANTA),
  [ChainId.KOVAN]: Ether.onChain(ChainId.KOVAN),
  [ChainId.FANTOM]: Fantom.onChain(ChainId.FANTOM),
  [ChainId.FANTOM_TESTNET]: Fantom.onChain(ChainId.FANTOM_TESTNET),
  [ChainId.MATIC]: Matic.onChain(ChainId.MATIC),
  [ChainId.MATIC_TESTNET]: Matic.onChain(ChainId.MATIC_TESTNET),
  [ChainId.XDAI]: xDai.onChain(ChainId.XDAI),
  [ChainId.BSC]: Binance.onChain(ChainId.BSC),
  [ChainId.BSC_TESTNET]: Binance.onChain(ChainId.BSC_TESTNET),
  // [ChainId.MOONBEAM_TESTNET]: Currency.GLMR,
  [ChainId.ARBITRUM]: Ether.onChain(ChainId.ARBITRUM),
  [ChainId.ARBITRUM_TESTNET]: Ether.onChain(ChainId.ARBITRUM_TESTNET),
  [ChainId.AVALANCHE]: Avalanche.onChain(ChainId.AVALANCHE),
  [ChainId.AVALANCHE_TESTNET]: Avalanche.onChain(ChainId.AVALANCHE_TESTNET),
  [ChainId.HECO]: Heco.onChain(ChainId.HECO),
  [ChainId.HECO_TESTNET]: Heco.onChain(ChainId.HECO_TESTNET),
  [ChainId.HARMONY]: Harmony.onChain(ChainId.HARMONY),
  [ChainId.HARMONY_TESTNET]: Harmony.onChain(ChainId.HARMONY_TESTNET),
  [ChainId.OKEX]: Okex.onChain(ChainId.OKEX),
  [ChainId.OKEX_TESTNET]: Okex.onChain(ChainId.OKEX_TESTNET),
  [ChainId.CELO]: Celo.onChain(ChainId.CELO),
  [ChainId.PALM]: Palm.onChain(ChainId.PALM),
  [ChainId.MOONRIVER]: Movr.onChain(ChainId.MOONRIVER),
  [ChainId.FUSE]: Fuse.onChain(ChainId.FUSE),
  [ChainId.TELOS]: Telos.onChain(ChainId.TELOS),
  [ChainId.MOONBEAM]: Glmr.onChain(ChainId.MOONBEAM),
  [ChainId.OPTIMISM]: Ether.onChain(ChainId.OPTIMISM),
  [ChainId.KAVA]: Kava.onChain(ChainId.KAVA),
  [ChainId.METIS]: Metis.onChain(ChainId.METIS),
  [ChainId.ARBITRUM_NOVA]: Ether.onChain(ChainId.ARBITRUM_NOVA),
  [ChainId.BOBA_AVAX]: Boba.onChain(ChainId.BOBA_AVAX),
  [ChainId.SCROLL_SEPOLIA]: Ether.onChain(ChainId.SCROLL_SEPOLIA),
  [ChainId.BLAST_TESTNET]: Ether.onChain(ChainId.BLAST_TESTNET),
  [ChainId.TAIKO_TESTNET]: Ether.onChain(ChainId.TAIKO_TESTNET),
  [ChainId.SHARDEUM_SPHINX]: Shardeum.onChain(ChainId.SHARDEUM_SPHINX),
  [ChainId.ZETA]: Zeta.onChain(ChainId.ZETA),
  [ChainId.MERLIN_TESTNET]: Merlin.onChain(ChainId.MERLIN_TESTNET),
  [ChainId.MERLIN]: Merlin.onChain(ChainId.MERLIN),
  [ChainId.XLAYER]: XLayer.onChain(ChainId.XLAYER),
  [ChainId.B2]: Merlin.onChain(ChainId.B2),
  [ChainId.SEPOLIA]: Ether.onChain(ChainId.SEPOLIA),
  [ChainId.FHENIX_TESTNET]: Fhenix.onChain(ChainId.FHENIX_TESTNET),
  [ChainId.MINT_TESTNET]: Ether.onChain(ChainId.MINT_TESTNET),
  [ChainId.PLUME_TESTNET]: Ether.onChain(ChainId.PLUME_TESTNET),
  [ChainId.BITLAYER_TESTNET]: Merlin.onChain(ChainId.BITLAYER_TESTNET),
  [ChainId.ZIRCUIT_Testnet]: Ether.onChain(ChainId.ZIRCUIT_Testnet)
}
